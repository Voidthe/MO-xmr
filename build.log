Sending build context to Docker daemon   16.9kB
Step 1/15 : FROM ubuntu:20.04
 ---> fb52e22af1b0
Step 2/15 : LABEL maintainer="Jerhaad"
 ---> Using cache
 ---> bd743590b867
Step 3/15 : ARG TIMEZONE=America/Los_Angeles
 ---> Using cache
 ---> f1a870c06413
Step 4/15 : ARG XMRIG_VER=6.12.2-mo2
 ---> Using cache
 ---> aa277b7ce1d7
Step 5/15 : ARG XMRIG_CUDA_VER=6.12.0
 ---> Using cache
 ---> 8b60d868edc7
Step 6/15 : ENV DEBIAN_FRONTEND=noninteractive
 ---> Using cache
 ---> 303574beae56
Step 7/15 : RUN set -xe;     apt update && apt upgrade -y;     ln -fs /usr/share/zoneinfo/${TIMEZONE} /etc/localtime;     apt install -y tzdata;     dpkg-reconfigure --frontend noninteractive tzdata;
 ---> Using cache
 ---> 0d394200a3af
Step 8/15 : RUN set -xe;     apt-get update;     apt-get install wget libxml2 linux-headers-$(uname -r) gnupg ubuntu-dev-tools software-properties-common -y;     wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin;     mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600;     wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub;     apt-key add 7fa2af80.pub;     add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /";     apt-get update;     apt-get -y install cuda;
 ---> Using cache
 ---> a689160f6b23
Step 9/15 : RUN set -xe;     apt-get update && apt-get install build-essential cmake automake libtool autoconf -y;     wget https://github.com/MoneroOcean/xmrig/archive/refs/tags/v${XMRIG_VER}.tar.gz;     tar xf v${XMRIG_VER}.tar.gz;     mkdir -p xmrig-${XMRIG_VER}/build;     sed -i 's/DonateLevel = 1/DonateLevel = 0/g' xmrig-${XMRIG_VER}/src/donate.h;     cd xmrig-${XMRIG_VER}/scripts;     ./build_deps.sh;     cd ../build;     cmake .. -DXMRIG_DEPS=scripts/deps -DCMAKE_BUILD_TYPE=Release -DCUDA_LIB=/usr/local/cuda/lib64/stubs/libcuda.so -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda;     make -j $(nproc);     cp xmrig /usr/local/bin/xmrig;     rm -rf xmrig* *.tar.gz;
 ---> Using cache
 ---> 51acac8a0827
Step 10/15 : RUN set -xe;     wget https://github.com/xmrig/xmrig-cuda/archive/refs/tags/v${XMRIG_CUDA_VER}.tar.gz;     tar xf v${XMRIG_CUDA_VER}.tar.gz;     mkdir -p xmrig-cuda-${XMRIG_CUDA_VER}/build;     cd xmrig-cuda-${XMRIG_CUDA_VER}/build;     cmake .. -DCUDA_LIB=/usr/local/cuda/lib64/stubs/libcuda.so -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda;     make -j$(nproc);     cp libxmrig-cuda.so /usr/local/lib/libxmrig-cuda.so;
 ---> Using cache
 ---> 7f3b898847d8
Step 11/15 : WORKDIR /tmp
 ---> Using cache
 ---> c27928c4a5ce
Step 12/15 : COPY entrypoint.sh /
 ---> Using cache
 ---> af4b16a2582f
Step 13/15 : COPY ./miner_data /
 ---> Using cache
 ---> 98b4637d2952
Step 14/15 : EXPOSE 3000
 ---> Using cache
 ---> fc9a39358bac
Step 15/15 : CMD ["/entrypoint.sh"]
 ---> Using cache
 ---> efba82deda51
Successfully built efba82deda51
Successfully tagged monero_cuda_local:latest
